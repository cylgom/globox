.POSIX:
NAME = globox
CMD = wine ./globox.exe

CC = x86_64-w64-mingw32-gcc
LDFLAGS+= 
LDLIBS+= -lgdi32 -ldwmapi -mwindows

CFLAGS+= -std=c99
CFLAGS+= -pedantic
CFLAGS+= -g
CFLAGS+= -Wall
CFLAGS+= -Wextra
CFLAGS+= -Werror=vla
CFLAGS+= -Werror
CFLAGS+= -Wno-address-of-packed-member
CFLAGS+= -Wno-unused-parameter
CFLAGS+= -Wno-implicit-fallthrough
CFLAGS+= -Wno-cast-function-type
CFLAGS+= -Wno-incompatible-pointer-types
CFLAGS+= -Isrc

CFLAGS+= -DGLOBOX_ERROR_LOG_BASIC
CFLAGS+= -DGLOBOX_ERROR_LOG_THROW
CFLAGS+= -DGLOBOX_ERROR_LOG_DEBUG
CFLAGS+= -DGLOBOX_PLATFORM_WINDOWS
CFLAGS+= -DGLOBOX_COMPATIBILITY_WINE
CFLAGS+= -DUNICODE
CFLAGS+= -D_UNICODE
CFLAGS+= -DWINVER=0x0A00
CFLAGS+= -D_WIN32_WINNT=0x0A00
CFLAGS+= -DCINTERFACE
CFLAGS+= -DCOBJMACROS
CFLAGS+= -DGLOBOX_CONTEXT_SOFTWARE

OBJ+= src/globox.o
OBJ+= src/globox_error.o
OBJ+= src/windows/globox_windows.o
OBJ+= src/windows/globox_windows_symbols.o
OBJ+= example/software.o
OBJ+= src/windows/software/globox_windows_software.o
OBJ+= res/icon/iconpix_pe.o

bin/$(NAME).exe: $(OBJ)
	mkdir -p $(@D)
	$(CC) $(LDFLAGS) -o bin/$(NAME) $^ $(LDLIBS)

res/icon/iconpix.bin:
	make/scripts/pixmap_bin.sh

res/icon/iconpix_pe.o: res/icon/iconpix.bin
	objcopy -I binary -O pe-x86-64 -B i386:x86-64 \
	--redefine-syms=res/icon/syms.map \
	--rename-section .data=.iconpix \
	$< $@

globox.o: src/globox.c src/globox.h src/globox_error.h
globox_error.o: src/globox_error.c src/globox.h src/globox_error.h
globox_windows.o: src/windows/globox_windows.c globox.h globox_error.h \
 windows/globox_windows.h windows/globox_windows_symbols.h
globox_windows_symbols.o: src/windows/globox_windows_symbols.c \
 windows/globox_windows_symbols.h
software.o: example/software.c globox.h
globox_windows_software.o: src/windows/software/globox_windows_software.c \
 globox.h globox_error.h windows/globox_windows.h \
 windows/software/globox_windows_software.h

run:
	cd bin && $(CMD)

clean:
	make/scripts/clean.sh

remotes:
	@echo "# registering remotes"
	make/scripts/git_remotes.sh

github:
	@echo "# sourcing submodules from https://github.com"
	make/scripts/git_github.sh

gitea:
	@echo "# sourcing submodules from personal server"
	make/scripts/git_gitea.sh
